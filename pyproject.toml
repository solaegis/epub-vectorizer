[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "epub-vectorizer"
description = "A tool to vectorize EPUB books and store them in Supabase"
readme = "README.md"
requires-python = ">=3.9"
license = { file = "LICENSE" }
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3 :: Only",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Intended Audience :: Developers",
    "Topic :: Text Processing :: Indexing",
]
dependencies = [
    "anthropic>=0.21.0",
    "ebooklib>=0.18.0",
    "beautifulsoup4>=4.12.0",
    "supabase>=2.0.0",
    "python-dotenv>=1.0.0",
    "requests>=2.31.0",
]
dynamic = ["version"]

[project.urls]
"Homepage" = "https://github.com/solaegis/epub-vectorizer"
"Bug Tracker" = "https://github.com/solaegis/epub-vectorizer/issues"

[project.scripts]
epub-vectorizer = "epub_vectorizer.cli:main"

[tool.hatch.version]
path = "src/epub_vectorizer/__about__.py"

[tool.hatch.build.targets.sdist]
exclude = [
    ".github/",
    "docs/",
    "tests/",
    ".gitignore",
    ".pre-commit-config.yaml",
]

[tool.hatch.build.targets.wheel]
packages = ["src/epub_vectorizer"]

[tool.hatch.envs.default]
dependencies = [
    "pytest>=7.3.1",
    "pytest-cov>=4.1.0",
    "black>=23.3.0",
    "ruff>=0.0.270",
    "mypy>=1.3.0",
    "pre-commit>=3.3.2",
]

[tool.hatch.envs.default.scripts]
test = "pytest {args}"
test-cov = "pytest --cov-report=term-missing --cov=src/epub_vectorizer {args}"
lint = [
    "black .",
    "ruff .",
    "mypy .",
]
format = [
    "black .",
    "ruff --fix .",
]

[[tool.hatch.envs.test.matrix]]
python = ["3.9", "3.10", "3.11"]

[tool.black]
line-length = 88
target-version = ["py39", "py310", "py311"]

[tool.isort]
profile = "black"
line_length = 88  # Same as Black's default

[tool.ruff]
# target-version = ["py39", "py310", "py311"]  # Support all specified Python versions
line-length = 88
select = ["E", "F", "B", "W", "I", "N", "UP", "ANN", "BLE", "C4", "SIM", "TCH"]
ignore = ["ANN101"]

[tool.ruff.isort]
known-first-party = ["epub_vectorizer"]

[tool.ruff.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.per-file-ignores]
"tests/*" = ["ANN", "S", "BLE"]

[tool.mypy]
python_version = "{{ python_version }}"  # Dynamically infer based on the environment
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "*.py"  # Allow any Python file, not just `test_*.py`

[tool.bandit]
exclude_dirs = ["tests", "venv"]
# OR you can use the following instead of excluding the entire tests directory:
# skips = ["B101"]  # Skip assert used across the whole project
